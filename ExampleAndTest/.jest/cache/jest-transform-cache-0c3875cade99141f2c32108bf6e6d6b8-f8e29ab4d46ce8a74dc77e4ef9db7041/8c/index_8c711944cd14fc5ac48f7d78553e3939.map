{"file":"D:\\CodingProjects\\Github\\typescript-material-ui-collection\\ExampleAndTest\\lib\\Components\\MaterialBackdrop\\index.tsx","mappings":"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","names":[],"sources":["D:\\CodingProjects\\Github\\typescript-material-ui-collection\\ExampleAndTest\\lib\\Components\\MaterialBackdrop\\index.tsx"],"sourcesContent":["import * as React from 'react'\nimport {Component} from 'react';\nimport {View, Animated, ScrollView, Text, TouchableWithoutFeedback, Platform, Dimensions} from 'react-native'\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons'\nimport Ripple from 'react-native-material-ripple';\n// Styles\nconst navBarHeight = (Platform.OS === \"ios\") ? 64 : 54;\nconst {width, height} = Dimensions.get(\"window\");\nconst screenHeight = width < height ? height : width;\n\nexport interface MaterialBackdropProps {\n  revealComponent?(): React.ReactNode,\n\n  backdropBackgroundColor?: string,\n  leftButtonIcon?: string,\n  expandedTitle?: string,\n  collapsedTitle?: string,\n\n  content?(): React.ReactNode,\n\n  textColor?: string,\n  subHeaderText?: string,\n  horizontalContent?: boolean,\n\n  onSubheaderClick?(): void,\n\n  onLeftButtonClick?(): void,\n\n  onRightButtonClick?(): void,\n\n  contentBackgroundColor?: string,\n  subheaderTextColor?: string,\n\n  onExpand?(): void,\n\n  onCollapse?(): void,\n\n  rightButtonIcon?: string\n}\n\n\nexport interface MaterialBackdropState {\n  isExpanded: boolean,\n  height: number\n}\n\n\nexport default class MaterialBackdrop extends Component<MaterialBackdropProps, MaterialBackdropState> {\n  ViewScale = new Animated.Value(0);\n\n  constructor(props) {\n    super(props);\n    this.state = {isExpanded: false, height: 0}\n  }\n\n  render() {\n\n    return (\n      <View style={{flex: 1}}>\n        <View style={{\n          backgroundColor: this.props.backdropBackgroundColor,\n          paddingTop: navBarHeight,\n          height: screenHeight,\n          paddingBottom: 16,\n        }}>\n          {this.props.leftButtonIcon &&\n          <Ripple style={{\n            width: 56,\n            height: 56,\n            position: 'absolute',\n            left: 0,\n            top: 0,\n            alignItems: 'center',\n            justifyContent: 'center'\n          }} onPress={() => {\n            if (this.props.onLeftButtonClick) {\n              this.props.onLeftButtonClick();\n            }\n            this.state.isExpanded ? this.collapse() : this.expand()\n          }}>\n            <MaterialCommunityIcons\n              name={this.props.leftButtonIcon} size={24} color={this.props.textColor}\n            />\n          </Ripple>\n          }\n          {this.props.rightButtonIcon &&\n          <Ripple style={{\n            width: 56,\n            height: 56,\n            position: 'absolute',\n            right: 0,\n            top: 0,\n            alignItems: 'center',\n            justifyContent: 'center'\n          }} onPress={() => {\n            if (this.props.onRightButtonClick) {\n              this.props.onRightButtonClick();\n            }\n            this.state.isExpanded ? this.collapse() : this.expand()\n          }}>\n            <MaterialCommunityIcons\n              name={this.props.rightButtonIcon} size={24} color={this.props.textColor}\n            />\n          </Ripple>\n          }\n          <Text style={{\n            alignSelf: 'center',\n            position: 'absolute',\n            color: this.props.textColor,\n            top: 18\n          }}>{this.state.isExpanded ? this.props.expandedTitle : this.props.collapsedTitle}</Text>\n          <Animated.View>\n            <ScrollView\n              style={{position: 'absolute', width: '100%', maxHeight: screenHeight - navBarHeight}}\n              onLayout={(event) => {\n                const {height} = event.nativeEvent.layout;\n\n                this.setState({height: height > screenHeight - navBarHeight -1 ? screenHeight-2*navBarHeight-16 : height})\n              }}>\n              {this.props.revealComponent()}\n            </ScrollView>\n          </Animated.View>\n        </View>\n        <Animated.View style={{\n          transform: [\n            {translateY: this.ViewScale},\n          ],\n          position: 'absolute',\n          top: navBarHeight,\n          backgroundColor: this.props.contentBackgroundColor,\n          flex: 1,\n          right: 0,\n          left: 0,\n          maxHeight: screenHeight - navBarHeight,\n          borderTopLeftRadius: 16,\n          borderTopRightRadius: 16,\n          minHeight: navBarHeight,\n          elevation: 4,\n          shadowColor:'black',\n          shadowOffset: {\n                width: 0,\n                height: 4\n          },\n          shadowRadius: 4,\n          shadowOpacity: 0.24\n        }}>\n          {this.props.subHeaderText &&\n          <TouchableWithoutFeedback\n            onPress={() => {\n              this.collapse();\n              if (this.props.onSubheaderClick) {\n                this.props.onSubheaderClick();\n              }\n            }}\n            style={{height: 40, paddingBottom: 8, width: '100%'}}>\n            <Text\n              style={{margin: 16, fontSize: 16, color: this.props.subheaderTextColor}}>{this.props.subHeaderText}</Text>\n          </TouchableWithoutFeedback>\n          }\n          <ScrollView horizontal={this.props.horizontalContent} style={{width: '100%', padding: 16, marginTop: 16}}>\n            {this.props.content()}\n          </ScrollView>\n        </Animated.View>\n      </View>\n    )\n  }\n\n  collapse = () => {\n    this.setState({isExpanded: false}, () => {\n      if (this.props.onCollapse) {\n        this.props.onCollapse();\n      }\n    });\n    Animated.timing(\n      this.ViewScale,\n      {\n        useNativeDriver: true,\n        toValue: 0,\n        duration: 200,\n      }\n    ).start();\n  };\n  expand = () => {\n    this.setState({isExpanded: true}, () => {\n      if (this.props.onExpand) {\n        this.props.onExpand();\n      }\n    });\n    Animated.timing(\n      this.ViewScale,\n      {\n        useNativeDriver: true,\n        toValue: this.state.height,\n        duration: 200,\n      }\n    ).start();\n  }\n}\n"],"version":3}