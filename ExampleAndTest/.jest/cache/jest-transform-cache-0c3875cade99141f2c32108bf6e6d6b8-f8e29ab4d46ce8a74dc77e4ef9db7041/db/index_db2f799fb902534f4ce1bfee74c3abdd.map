{"file":"D:\\CodingProjects\\Github\\typescript-material-ui-collection\\ExampleAndTest\\lib\\Components\\MaterialFab\\index.tsx","mappings":";;AAAA,+BAA+B;AAC/B,+EAAkD;AAClD,6FAAqF;AACrF,6BAAuC;AAavC,kBAAe,CAAC,KAAuB,EAAE,EAAE,CACzC,oBAAC,sCAAM,IACL,WAAW,EAAE,KAAK,CAAC,SAAS,EAC5B,OAAO,EAAE,GAAE,EAAE,CAAA,KAAK,CAAC,OAAO,EAAE,EAC5B,KAAK,EAAE,EAAC,YAAY,EAAE,KAAK,CAAC,IAAI,CAAA,CAAC,CAAA,EAAE,CAAA,CAAC,CAAA,EAAE;QACpC,MAAM,EAAC,KAAK,CAAC,IAAI,CAAA,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;QAC1B,KAAK,EAAE,KAAK,CAAC,IAAI,CAAA,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;QAC1B,eAAe,EAAC,KAAK,CAAC,KAAK;QAC3B,QAAQ,EAAC,QAAQ;QACjB,MAAM,EAAC,GAAG;QACV,SAAS,EAAC,EAAE;QACZ,WAAW,EAAC,OAAO;QACnB,YAAY,EAAE;YACX,KAAK,EAAE,CAAC;YACR,MAAM,EAAE,EAAE;SACZ;QACD,YAAY,EAAE,EAAE;QAChB,aAAa,EAAE,IAAI;QACnB,IAAI,EAAC,KAAK,CAAC,QAAQ,KAAK,YAAY,IAAG,KAAK,CAAC,QAAQ,KAAK,SAAS,CAAC,CAAC,CAAC,EAAE,CAAA,CAAC,CAAA,SAAS;QAClF,KAAK,EAAC,KAAK,CAAC,QAAQ,KAAK,aAAa,IAAG,KAAK,CAAC,QAAQ,KAAK,UAAU,CAAC,CAAC,CAAC,EAAE,CAAA,CAAC,CAAA,SAAS;QACrF,GAAG,EAAC,KAAK,CAAC,QAAQ,KAAK,UAAU,IAAG,KAAK,CAAC,QAAQ,KAAK,SAAS,CAAC,CAAC,CAAC,EAAE,CAAA,CAAC,CAAA,SAAS;QAC/E,MAAM,EAAC,KAAK,CAAC,QAAQ,KAAK,aAAa,IAAG,KAAK,CAAC,QAAQ,KAAK,YAAY,CAAC,CAAC,CAAC,EAAE,CAAA,CAAC,CAAA,SAAS;QACxF,QAAQ,EAAC,UAAU;QACnB,UAAU,EAAE,QAAQ;QACpB,cAAc,EAAE,QAAQ,EAAC;IAC1B,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACxB,CAAC,CAAC,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,QAAQ,CAAC;YACnC,oBAAC,gCAAsB,IACrB,KAAK,EAAE,EAAC,MAAM,EAAC,CAAC,EAAC,EAAE,IAAI,EAAE,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAG,KAAK,CAAC,SAAS,GAC1E;IAEH,KAAK,CAAC,QAAQ;QACf,oBAAC,oBAAgB,IAAC,KAAK,EAAE,KAAK,CAAC,SAAS,EAAE,KAAK,SAAE,CAE1C,CAAC","names":[],"sources":["D:\\CodingProjects\\Github\\typescript-material-ui-collection\\ExampleAndTest\\lib\\Components\\MaterialFab\\index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport Ripple from 'react-native-material-ripple';\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons'\nimport {MaterialProgress} from \"../..\";\n\nexport interface MaterialFabProps {\n  icon?: React.ReactNode,\n  color?:string,\n  iconColor?: string,\n  onPress?():void,\n  iconName:string,\n  mini?:boolean,\n  position:string,//{'bottomLeft','topRight','topLeft','bottomRight'}\n  progress?:boolean\n}\n\nexport default (props: MaterialFabProps) =>\n  <Ripple\n    rippleColor={props.iconColor}\n    onPress={()=>props.onPress()}\n    style={{borderRadius: props.mini?20:28,\n      height:props.mini? 40 : 56,\n      width: props.mini? 40 : 56,\n      backgroundColor:props.color,\n      overflow:'hidden',\n      zIndex:900,\n      elevation:16,\n      shadowColor:'black',\n      shadowOffset: {\n         width: 0,\n         height: 16\n      },\n      shadowRadius: 16,\n      shadowOpacity: 0.24,\n      left:props.position === \"bottomLeft\"|| props.position === \"topLeft\" ? 16:undefined,\n      right:props.position === \"bottomRight\"|| props.position === \"topRight\" ? 16:undefined,\n      top:props.position === \"topRight\"|| props.position === \"topLeft\" ? 16:undefined,\n      bottom:props.position === \"bottomRight\"|| props.position === \"bottomLeft\" ? 16:undefined,\n      position:'absolute',\n      alignItems: 'center',\n      justifyContent: 'center'}}>\n    {props.icon ? props.icon :\n      (!props.progress && props.iconName) &&\n      <MaterialCommunityIcons\n        style={{margin:8}} name={props.iconName} size={24} color= {props.iconColor}\n      />\n    }\n    {props.progress &&\n    <MaterialProgress color={props.iconColor} small/>\n    }\n  </Ripple>;\n"],"version":3}