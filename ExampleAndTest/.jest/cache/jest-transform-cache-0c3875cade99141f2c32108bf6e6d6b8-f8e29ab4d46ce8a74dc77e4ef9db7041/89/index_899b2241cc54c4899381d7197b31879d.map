{"file":"D:\\CodingProjects\\Github\\typescript-material-ui-collection\\ExampleAndTest\\lib\\Components\\MaterialCollapsibleToolbarContainer\\index.tsx","mappings":"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","names":[],"sources":["D:\\CodingProjects\\Github\\typescript-material-ui-collection\\ExampleAndTest\\lib\\Components\\MaterialCollapsibleToolbarContainer\\index.tsx"],"sourcesContent":["import * as React from 'react'\nimport {Component} from 'react'\nimport {Animated , Platform, StatusBar, StyleSheet, View, ScrollViewProps} from 'react-native'\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons'\nimport Ripple from 'react-native-material-ripple';\nimport {ifIphoneX} from './helper'\n\nconst DEFAULT_TOOLBAR_HEIGHT = 300;\n\nexport interface MaterialCollapsibleToolbarContainerProps extends ScrollViewProps {\n    collapsedNavBarBackgroundColor?: string,\n    imageSource?: string,\n    title?:string,\n    onContentScroll?(): void,\n    renderContent?(): React.ReactNode,\n    renderCollapsedToolbarContent?():React.ReactNode,\n    toolBarHeight?: number,\n    translucentStatusBar?: boolean,\n    textColor?: string,\n    leftButtonIcon?: string,\n    onLeftIconPress?(): void,\n    rightButtonIcon?: string,\n    onRightIconPress?(): void\n}\n\nexport default class MaterialCollapsibleToolbarContainer extends Component<MaterialCollapsibleToolbarContainerProps> {\n\n    static defaultProps = {\n        collapsedNavBarBackgroundColor: '#FFF',\n        imageSource: '',\n        toolBarHeight: DEFAULT_TOOLBAR_HEIGHT,\n        translucentStatusBar: false,\n        renderCollapsedToolbarContent: () => {},\n        renderContent: () => {},\n        onContentScroll: () => {},\n        onLeftIconPress: () => {},\n        onRightIconPress: () => {}\n    };\n    titleFontSize: any;\n    statusBarHeight: number;\n    navBarHeight: number;\n    maxScrollableHeight: number;\n    scrollOffsetY: any;\n    toolBarOpacity: any;\n    toolBarOverlayOpacity: any;\n    navBarOpacity: any;\n    navBarOverlayOpacity: any;\n    blurRadius:any;\n\n    constructor(props) {\n        super(props);\n\n        const APPBAR_HEIGHT = Platform.OS === 'ios' ? 44 : 56;\n        const ANDROID_STATUS_BAR_HEIGHT = props.translucentStatusBar ? StatusBar.currentHeight : 0;\n\n        this.statusBarHeight = Platform.OS === 'ios' ? ifIphoneX(44, 20) : ANDROID_STATUS_BAR_HEIGHT;\n        this.navBarHeight = Platform.OS === 'ios' ? APPBAR_HEIGHT + this.statusBarHeight : APPBAR_HEIGHT;\n        this.maxScrollableHeight = props.toolBarHeight - this.navBarHeight;\n        const inputRange1 = [this.maxScrollableHeight / 2, this.maxScrollableHeight];\n        const inputRange2 = [this.maxScrollableHeight - 0.1, this.maxScrollableHeight];\n        this.blurRadius=new Animated.Value(0);\n        this.scrollOffsetY = new Animated.Value(0);\n\n        this.toolBarOpacity = this.scrollOffsetY.interpolate({\n            inputRange: inputRange1,\n            outputRange: [1, 0]\n        });\n\n        this.toolBarOverlayOpacity = this.scrollOffsetY.interpolate({\n            inputRange: inputRange1,\n            outputRange: [0, 1]\n        });\n\n        this.navBarOpacity = this.scrollOffsetY.interpolate({\n            inputRange: inputRange2,\n            outputRange: [0, 1]\n        });\n\n        this.navBarOverlayOpacity = this.scrollOffsetY.interpolate({\n            inputRange: inputRange2,\n            outputRange: [1, 0]\n        });\n        this.titleFontSize = this.scrollOffsetY.interpolate({\n            inputRange: inputRange1,\n            outputRange: [2, 1]\n        });\n        this.blurRadius = this.scrollOffsetY.interpolate({\n            inputRange: inputRange1,\n            outputRange: [1, 2]\n        })\n    }\n\n    render() {\n        const {\n            collapsedNavBarBackgroundColor,\n            imageSource,\n            onContentScroll,\n            renderContent,\n            toolBarHeight,\n            ...props\n        } = this.props;\n\n        if (!imageSource) {\n          //  console.error('Either an image source or a custom toolbar component must be provided')\n        }\n\n        return (\n            <View style={styles.container}>\n                <Animated.ScrollView\n                    {...props}\n                    scrollEventThrottle={1}\n                    onScroll={Animated.event(\n                        [{nativeEvent: {contentOffset: {y: this.scrollOffsetY}}}],\n                        {\n                            useNativeDriver: true,\n                            listener: onContentScroll\n                        }\n                    )}\n                >\n\n\n                    <Animated.View\n                        style={[\n                            styles.toolBarOverlay,\n                            {\n                                backgroundColor: collapsedNavBarBackgroundColor,\n                                height: toolBarHeight,\n                                opacity: this.toolBarOverlayOpacity\n                            }\n                        ]}\n                    >\n                        <MaterialCommunityIcons\n                            style={{position: 'absolute', left: 16, top: 16}} name={'menu'} size={24} color={'white'}\n                        />\n\n                        <Animated.Text style={{\n                            transform: [\n                                {scale: this.titleFontSize}],\n                            position: 'absolute',\n                            marginLeft: 56,\n                            bottom: 16,\n                            textAlign: 'center',\n                            color: '#FFF'\n                        }}>{this.props.title}</Animated.Text>\n\n                    </Animated.View>\n\n                    <Animated.View style={{opacity: this.toolBarOpacity}}>\n\n                        <View style={{height: toolBarHeight}}>\n                            <Animated.Image\n                                source={{uri: imageSource || ''}}\n                                style={{height: toolBarHeight}}\n                                blurRadius={this.blurRadius}\n                            />\n\n                            <Animated.View style={{position:'absolute', top:50,bottom:50,left:0,right:0,alignItems:'center',justifyContent:'center'}}>\n                                {this.props.renderCollapsedToolbarContent()}\n                            </Animated.View>\n\n                            <Animated.Text style={{\n                                transform: [\n                                    {scale: this.titleFontSize}],\n                                position: 'absolute',\n                                marginLeft: 56,\n                                bottom: 16,\n                                textAlign: 'center',\n                                color: '#FFF'\n                            }}>{this.props.title}</Animated.Text>\n\n                        </View>\n\n\n                    </Animated.View>\n\n                    {renderContent()}\n\n                </Animated.ScrollView>\n\n                <Animated.View\n                    style={[\n                        styles.navBarContainer,\n                        {\n                            backgroundColor: collapsedNavBarBackgroundColor,\n                            height: this.navBarHeight,\n                            opacity: this.navBarOpacity,\n                            paddingTop: this.statusBarHeight\n                        }\n                    ]}\n                >\n                    <Ripple\n                        rippleColor={this.props.textColor}\n                        onPress={() => this.props.onLeftIconPress()}\n                        style={{\n                            position: 'absolute', left: 0, top: 0,\n                            height: 56,\n                            width: 56,\n                            zIndex: 100,\n                            overflow: 'hidden',\n                            alignItems: 'center',\n                            justifyContent: 'center'\n                        }}>\n                        <MaterialCommunityIcons\n                            name={this.props.leftButtonIcon} size={24} color={this.props.textColor}\n                        />\n                    </Ripple>\n                    {this.props.rightButtonIcon &&\n                    <Ripple\n                        rippleColor={this.props.textColor}\n                        onPress={() => this.props.onRightIconPress()}\n                        style={{\n                            position: 'absolute', right: 0, top: 0,\n                            height: 56,\n                            width: 56,\n                            overflow: 'hidden',\n                            alignItems: 'center',\n                            justifyContent: 'center'\n                        }}>\n                        <MaterialCommunityIcons\n                            name={this.props.rightButtonIcon} size={24} color={this.props.textColor}\n                        />\n                    </Ripple>\n                    }\n                    <Animated.Text style={{\n                        transform: [\n                            {scale: 1}],\n                        position: 'absolute',\n                        marginLeft: 56,\n                        bottom: 16,\n                        textAlign: 'center',\n                        color: '#FFF'\n                    }}>{this.props.title}</Animated.Text>\n                </Animated.View>\n                <Ripple\n                    rippleColor={this.props.textColor}\n                    onPress={() => this.props.onLeftIconPress()}\n                    style={{\n                        position: 'absolute', left: 0, top: 0,\n                        height: 56,\n                        width: 56,\n                        overflow: 'hidden',\n                        alignItems: 'center',\n                        justifyContent: 'center'\n                    }}>\n                    <MaterialCommunityIcons\n                        name={this.props.leftButtonIcon} size={24} color={this.props.textColor}\n                    />\n                </Ripple>\n                {this.props.rightButtonIcon &&\n                <Ripple\n                    rippleColor={this.props.textColor}\n                    onPress={() => this.props.onRightIconPress()}\n                    style={{\n                        position: 'absolute', right: 0, top: 0,\n                        height: 56,\n                        width: 56,\n                        overflow: 'hidden',\n                        alignItems: 'center',\n                        justifyContent: 'center'\n                    }}>\n                    <MaterialCommunityIcons\n                        name={this.props.rightButtonIcon} size={24} color={this.props.textColor}\n                    />\n                </Ripple>\n                }\n\n            </View>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1\n    },\n    toolBarOverlay: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0\n    },\n    navBarContainer: {\n        position: 'absolute' as 'absolute',\n        left: 0,\n        right: 0,\n        flexDirection: 'row' as 'row',\n        ...Platform.select({\n            ios: {\n                shadowColor: 'black',\n                shadowOpacity: 0.1,\n                shadowRadius: StyleSheet.hairlineWidth,\n                shadowOffset: {\n                    width: StyleSheet.hairlineWidth,\n                    height: StyleSheet.hairlineWidth\n                },\n                borderBottomWidth: StyleSheet.hairlineWidth,\n                borderBottomColor: 'rgba(0, 0, 0, .3)'\n            },\n            android: {\n                elevation: 4\n            }\n        })\n    },\n    navBarOverlay: {\n        backgroundColor: 'rgba(0, 0, 0, 0)',\n        position: 'absolute',\n        left: 0,\n        right: 0\n    }\n});\n"],"version":3}