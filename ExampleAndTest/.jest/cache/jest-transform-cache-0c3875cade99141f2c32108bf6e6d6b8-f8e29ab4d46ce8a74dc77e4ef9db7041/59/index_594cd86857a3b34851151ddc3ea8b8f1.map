{"file":"D:\\CodingProjects\\Github\\typescript-material-ui-collection\\ExampleAndTest\\lib\\Components\\MaterialProgress\\MaterialIndicator\\indicator\\index.tsx","mappings":"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","names":[],"sources":["D:\\CodingProjects\\Github\\typescript-material-ui-collection\\ExampleAndTest\\lib\\Components\\MaterialProgress\\MaterialIndicator\\indicator\\index.tsx"],"sourcesContent":["import * as React from 'react'\nimport { PureComponent } from 'react'\nimport { Animated, Easing } from 'react-native'\n\nconst hasLoopSupport = false;\n\nexport interface IndicatorProps {\n    animationEasing?(): number,\n    animationDuration?: number,\n\n    animating?: any,\n    interaction?: boolean,\n\n    renderComponent?(value:{ index:any, count:any, progress:any }): any,\n    count?: number\n    style?:object\n}\n\nexport interface IndicatorState {\n    progress: any,\n    animation: any\n}\n\n\nexport default class Indicator extends PureComponent<IndicatorProps,IndicatorState> {\n    static defaultProps = {\n        animationEasing: Easing.linear,\n        animationDuration: 1200,\n\n        animating: true,\n        interaction: true,\n\n        count: 1\n    };\n\n    mounted;\n    state;\n    constructor (props) {\n        super(props)\n\n        this.renderComponent = this.renderComponent.bind(this)\n        this.startAnimation = this.startAnimation.bind(this)\n        this.stopAnimation = this.stopAnimation.bind(this)\n\n        this.state = {\n            progress: new Animated.Value(0)\n        }\n\n        this.mounted = false\n    }\n\n    startAnimation ({ finished }={finished:true}) {\n        let { progress } = this.state\n        let {\n            interaction,\n            animationEasing,\n            animationDuration\n        } = this.props\n\n        if (!this.mounted || finished === false) {\n            return\n        }\n\n        let animation =\n            Animated.timing(progress, {\n                duration: animationDuration,\n                easing: animationEasing,\n                useNativeDriver: true,\n                isInteraction: interaction,\n                toValue: 1\n            })\n\n        if (hasLoopSupport) {\n            Animated\n                .loop(animation)\n                .start()\n        } else {\n            progress.setValue(0)\n            animation.start(this.startAnimation)\n        }\n\n        this.setState({ animation })\n    }\n\n    stopAnimation () {\n        let { animation } = this.state\n\n        if (animation == null) {\n            return\n        }\n\n        animation.stop()\n\n        this.setState({ animation: null })\n    }\n\n    componentDidMount () {\n        let { animating } = this.props\n\n        this.mounted = true\n\n        if (animating) {\n            this.startAnimation()\n        }\n    }\n\n    componentWillUnmount () {\n        this.mounted = false\n    }\n\n    componentWillReceiveProps (props) {\n        let { animating } = this.props\n\n        if (animating ^ props.animating) {\n            if (animating) {\n                this.stopAnimation()\n            } else {\n                this.startAnimation()\n            }\n        }\n    }\n\n    renderComponent (undefined, index) {\n        undefined=undefined;\n        let { progress } = this.state\n        let { renderComponent, count } = this.props\n\n        if (typeof renderComponent === 'function') {\n            return renderComponent({ index, count, progress })\n        } else {\n            return null\n        }\n    }\n\n    render () {\n        let { count, ...props } = this.props\n\n        return (\n            <Animated.View {...props}>\n                {Array.from(new Array(count), this.renderComponent)}\n            </Animated.View>\n        )\n    }\n}\n"],"version":3}