"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const React = require("react");
const react_native_1 = require("react-native");
const react_native_material_ripple_1 = require("react-native-material-ripple");
const MaterialCommunityIcons_1 = require("react-native-vector-icons/MaterialCommunityIcons");
const __1 = require("../..");
exports.default = (props) => React.createElement(react_native_material_ripple_1.default, { rippleColor: props.textColor, onPress: () => props.onPress(), style: Object.assign({ borderRadius: 4, margin: props.margin, height: 36, minWidth: 64, backgroundColor: props.color, overflow: 'hidden', paddingLeft: 16, elevation: 4, shadowColor: 'black', shadowOffset: {
            width: 0,
            height: 4
        }, shadowRadius: 4, shadowOpacity: 0.24, flexDirection: 'row', paddingRight: 16, alignItems: 'center', justifyContent: 'center' }, props.style) },
    props.icon ? props.icon :
        (!props.progress && props.iconName) &&
            React.createElement(MaterialCommunityIcons_1.default, { style: { margin: 8 }, name: props.iconName, size: 14, color: props.textColor }),
    !props.progress &&
        React.createElement(react_native_1.Text, { style: { fontFamily: props.textFont, color: props.textColor, fontSize: 14 } }, props.text),
    props.progress &&
        React.createElement(__1.MaterialProgress, { color: props.textColor, small: true }));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiRDpcXENvZGluZ1Byb2plY3RzXFxHaXRodWJcXHR5cGVzY3JpcHQtbWF0ZXJpYWwtdWktY29sbGVjdGlvblxcRXhhbXBsZUFuZFRlc3RcXGxpYlxcQ29tcG9uZW50c1xcTWF0ZXJpYWxDb250YWluZWRCdXR0b25cXGluZGV4LnRzeCIsIm1hcHBpbmdzIjoiOztBQUFBLCtCQUErQjtBQUMvQiwrQ0FBa0M7QUFDbEMsK0VBQWtEO0FBQ2xELDZGQUFxRjtBQUNyRiw2QkFBdUM7QUFrQnZDLGtCQUFlLENBQUMsS0FBbUMsRUFBRSxFQUFFLENBQ3JELG9CQUFDLHNDQUFNLElBQ0wsV0FBVyxFQUFFLEtBQUssQ0FBQyxTQUFTLEVBQzVCLE9BQU8sRUFBRSxHQUFHLEVBQUUsQ0FBQyxLQUFLLENBQUMsT0FBTyxFQUFFLEVBQzlCLEtBQUssa0JBQ0gsWUFBWSxFQUFFLENBQUMsRUFDZixNQUFNLEVBQUUsS0FBSyxDQUFDLE1BQU0sRUFDcEIsTUFBTSxFQUFFLEVBQUUsRUFDVixRQUFRLEVBQUUsRUFBRSxFQUNaLGVBQWUsRUFBRSxLQUFLLENBQUMsS0FBSyxFQUM1QixRQUFRLEVBQUUsUUFBUSxFQUNsQixXQUFXLEVBQUUsRUFBRSxFQUNmLFNBQVMsRUFBRSxDQUFDLEVBQ1osV0FBVyxFQUFDLE9BQU8sRUFDbkIsWUFBWSxFQUFFO1lBQ2IsS0FBSyxFQUFFLENBQUM7WUFDTCxNQUFNLEVBQUUsQ0FBQztTQUNaLEVBQ0QsWUFBWSxFQUFFLENBQUMsRUFDZixhQUFhLEVBQUUsSUFBSSxFQUNuQixhQUFhLEVBQUUsS0FBSyxFQUNwQixZQUFZLEVBQUUsRUFBRSxFQUNoQixVQUFVLEVBQUUsUUFBUSxFQUNwQixjQUFjLEVBQUUsUUFBUSxJQUNyQixLQUFLLENBQUMsS0FBSztJQUVmLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN4QixDQUFDLENBQUMsS0FBSyxDQUFDLFFBQVEsSUFBSSxLQUFLLENBQUMsUUFBUSxDQUFDO1lBQ25DLG9CQUFDLGdDQUFzQixJQUNyQixLQUFLLEVBQUUsRUFBQyxNQUFNLEVBQUUsQ0FBQyxFQUFDLEVBQUUsSUFBSSxFQUFFLEtBQUssQ0FBQyxRQUFRLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxLQUFLLEVBQUUsS0FBSyxDQUFDLFNBQVMsR0FDMUU7SUFFSCxDQUFDLEtBQUssQ0FBQyxRQUFRO1FBQ2hCLG9CQUFDLG1CQUFJLElBQUMsS0FBSyxFQUFFLEVBQUMsVUFBVSxFQUFFLEtBQUssQ0FBQyxRQUFRLEVBQUUsS0FBSyxFQUFFLEtBQUssQ0FBQyxTQUFTLEVBQUUsUUFBUSxFQUFFLEVBQUUsRUFBQyxJQUFHLEtBQUssQ0FBQyxJQUFJLENBQVE7SUFFbkcsS0FBSyxDQUFDLFFBQVE7UUFDZixvQkFBQyxvQkFBZ0IsSUFBQyxLQUFLLEVBQUUsS0FBSyxDQUFDLFNBQVMsRUFBRSxLQUFLLFNBQUUsQ0FFMUMsQ0FBQyIsIm5hbWVzIjpbXSwic291cmNlcyI6WyJEOlxcQ29kaW5nUHJvamVjdHNcXEdpdGh1YlxcdHlwZXNjcmlwdC1tYXRlcmlhbC11aS1jb2xsZWN0aW9uXFxFeGFtcGxlQW5kVGVzdFxcbGliXFxDb21wb25lbnRzXFxNYXRlcmlhbENvbnRhaW5lZEJ1dHRvblxcaW5kZXgudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHtUZXh0fSBmcm9tIFwicmVhY3QtbmF0aXZlXCI7XG5pbXBvcnQgUmlwcGxlIGZyb20gJ3JlYWN0LW5hdGl2ZS1tYXRlcmlhbC1yaXBwbGUnO1xuaW1wb3J0IE1hdGVyaWFsQ29tbXVuaXR5SWNvbnMgZnJvbSAncmVhY3QtbmF0aXZlLXZlY3Rvci1pY29ucy9NYXRlcmlhbENvbW11bml0eUljb25zJ1xuaW1wb3J0IHtNYXRlcmlhbFByb2dyZXNzfSBmcm9tIFwiLi4vLi5cIjtcblxuZXhwb3J0IGludGVyZmFjZSBNYXRlcmlhbENvbnRhaW5lZEJ1dHRvblByb3BzIHtcbiAgdGV4dDogc3RyaW5nLFxuICBpY29uPzogUmVhY3QuUmVhY3ROb2RlLFxuICBtYXJnaW4/OiBudW1iZXIsXG4gIGNvbG9yPzogc3RyaW5nLFxuICB0ZXh0Q29sb3I/OiBzdHJpbmcsXG4gIHRleHRGb250Pzogc3RyaW5nLFxuXG4gIG9uUHJlc3M/KCk6IHZvaWQsXG5cbiAgaWNvbk5hbWU/OiBzdHJpbmcsXG4gIHByb2dyZXNzPzogYm9vbGVhbixcblxuICBzdHlsZT86b2JqZWN0XG59XG5cbmV4cG9ydCBkZWZhdWx0IChwcm9wczogTWF0ZXJpYWxDb250YWluZWRCdXR0b25Qcm9wcykgPT5cbiAgPFJpcHBsZVxuICAgIHJpcHBsZUNvbG9yPXtwcm9wcy50ZXh0Q29sb3J9XG4gICAgb25QcmVzcz17KCkgPT4gcHJvcHMub25QcmVzcygpfVxuICAgIHN0eWxlPXt7XG4gICAgICBib3JkZXJSYWRpdXM6IDQsXG4gICAgICBtYXJnaW46IHByb3BzLm1hcmdpbixcbiAgICAgIGhlaWdodDogMzYsXG4gICAgICBtaW5XaWR0aDogNjQsXG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6IHByb3BzLmNvbG9yLFxuICAgICAgb3ZlcmZsb3c6ICdoaWRkZW4nLFxuICAgICAgcGFkZGluZ0xlZnQ6IDE2LFxuICAgICAgZWxldmF0aW9uOiA0LFxuICAgICAgc2hhZG93Q29sb3I6J2JsYWNrJyxcbiAgICAgIHNoYWRvd09mZnNldDoge1xuICAgICAgIHdpZHRoOiAwLFxuICAgICAgICAgIGhlaWdodDogNFxuICAgICAgfSxcbiAgICAgIHNoYWRvd1JhZGl1czogNCxcbiAgICAgIHNoYWRvd09wYWNpdHk6IDAuMjQsXG4gICAgICBmbGV4RGlyZWN0aW9uOiAncm93JyxcbiAgICAgIHBhZGRpbmdSaWdodDogMTYsXG4gICAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgICAgIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJyxcbiAgICAgIC4uLnByb3BzLnN0eWxlXG4gICAgfX0+XG4gICAge3Byb3BzLmljb24gPyBwcm9wcy5pY29uIDpcbiAgICAgICghcHJvcHMucHJvZ3Jlc3MgJiYgcHJvcHMuaWNvbk5hbWUpICYmXG4gICAgICA8TWF0ZXJpYWxDb21tdW5pdHlJY29uc1xuICAgICAgICBzdHlsZT17e21hcmdpbjogOH19IG5hbWU9e3Byb3BzLmljb25OYW1lfSBzaXplPXsxNH0gY29sb3I9e3Byb3BzLnRleHRDb2xvcn1cbiAgICAgIC8+XG4gICAgfVxuICAgIHshcHJvcHMucHJvZ3Jlc3MgJiZcbiAgICA8VGV4dCBzdHlsZT17e2ZvbnRGYW1pbHk6IHByb3BzLnRleHRGb250LCBjb2xvcjogcHJvcHMudGV4dENvbG9yLCBmb250U2l6ZTogMTR9fT57cHJvcHMudGV4dH08L1RleHQ+XG4gICAgfVxuICAgIHtwcm9wcy5wcm9ncmVzcyAmJlxuICAgIDxNYXRlcmlhbFByb2dyZXNzIGNvbG9yPXtwcm9wcy50ZXh0Q29sb3J9IHNtYWxsLz5cbiAgICB9XG4gIDwvUmlwcGxlPjtcbiJdLCJ2ZXJzaW9uIjozfQ==