"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const React = require("react");
const react_native_1 = require("react-native");
const react_native_material_ripple_1 = require("react-native-material-ripple");
const MaterialCommunityIcons_1 = require("react-native-vector-icons/MaterialCommunityIcons");
const __1 = require("../..");
exports.default = (props) => React.createElement(react_native_material_ripple_1.default, { rippleColor: props.textColor, onPress: () => props.onPress(), style: Object.assign({ borderRadius: 4, margin: props.margin, height: 36, minWidth: 64, borderWidth: 2, borderColor: props.textColor, overflow: 'hidden', flexDirection: 'row', paddingLeft: 16, paddingRight: 16, alignItems: 'center', justifyContent: 'center' }, props.style) },
    props.icon ? props.icon :
        (!props.progress && props.iconName) &&
            React.createElement(MaterialCommunityIcons_1.default, { style: { margin: 8 }, name: props.iconName, size: 14, color: props.textColor }),
    props.progress &&
        React.createElement(__1.MaterialProgress, { color: props.textColor, small: true }),
    !props.progress &&
        React.createElement(react_native_1.Text, { style: { fontFamily: props.textFont, color: props.textColor, fontSize: 14 } }, props.text));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiRDpcXENvZGluZ1Byb2plY3RzXFxHaXRodWJcXHR5cGVzY3JpcHQtbWF0ZXJpYWwtdWktY29sbGVjdGlvblxcRXhhbXBsZUFuZFRlc3RcXGxpYlxcQ29tcG9uZW50c1xcTWF0ZXJpYWxPdXRsaW5lZEJ1dHRvblxcaW5kZXgudHN4IiwibWFwcGluZ3MiOiI7O0FBQUEsK0JBQStCO0FBQy9CLCtDQUFrQztBQUNsQywrRUFBa0Q7QUFDbEQsNkZBQXFGO0FBQ3JGLDZCQUF1QztBQWN2QyxrQkFBZSxDQUFDLEtBQWtDLEVBQUUsRUFBRSxDQUNwRCxvQkFBQyxzQ0FBTSxJQUNMLFdBQVcsRUFBRSxLQUFLLENBQUMsU0FBUyxFQUM1QixPQUFPLEVBQUUsR0FBRSxFQUFFLENBQUEsS0FBSyxDQUFDLE9BQU8sRUFBRSxFQUM1QixLQUFLLGtCQUFHLFlBQVksRUFBRSxDQUFDLEVBQ3JCLE1BQU0sRUFBQyxLQUFLLENBQUMsTUFBTSxFQUNuQixNQUFNLEVBQUUsRUFBRSxFQUNWLFFBQVEsRUFBRSxFQUFFLEVBQ1osV0FBVyxFQUFDLENBQUMsRUFDYixXQUFXLEVBQUMsS0FBSyxDQUFDLFNBQVMsRUFDM0IsUUFBUSxFQUFDLFFBQVEsRUFDakIsYUFBYSxFQUFDLEtBQUssRUFDbkIsV0FBVyxFQUFDLEVBQUUsRUFDZCxZQUFZLEVBQUMsRUFBRSxFQUNmLFVBQVUsRUFBRSxRQUFRLEVBQ3BCLGNBQWMsRUFBRSxRQUFRLElBQ3JCLEtBQUssQ0FBQyxLQUFLO0lBRWYsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3hCLENBQUMsQ0FBQyxLQUFLLENBQUMsUUFBUSxJQUFJLEtBQUssQ0FBQyxRQUFRLENBQUM7WUFDbkMsb0JBQUMsZ0NBQXNCLElBQ3JCLEtBQUssRUFBRSxFQUFDLE1BQU0sRUFBQyxDQUFDLEVBQUMsRUFBRSxJQUFJLEVBQUUsS0FBSyxDQUFDLFFBQVEsRUFBRSxJQUFJLEVBQUUsRUFBRSxFQUFFLEtBQUssRUFBRyxLQUFLLENBQUMsU0FBUyxHQUMxRTtJQUVILEtBQUssQ0FBQyxRQUFRO1FBQ2Ysb0JBQUMsb0JBQWdCLElBQUMsS0FBSyxFQUFFLEtBQUssQ0FBQyxTQUFTLEVBQUUsS0FBSyxTQUFFO0lBRWhELENBQUMsS0FBSyxDQUFDLFFBQVE7UUFDaEIsb0JBQUMsbUJBQUksSUFBQyxLQUFLLEVBQUUsRUFBQyxVQUFVLEVBQUUsS0FBSyxDQUFDLFFBQVEsRUFBRSxLQUFLLEVBQUUsS0FBSyxDQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUUsRUFBRSxFQUFDLElBQUcsS0FBSyxDQUFDLElBQUksQ0FBUSxDQUU3RixDQUFDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIkQ6XFxDb2RpbmdQcm9qZWN0c1xcR2l0aHViXFx0eXBlc2NyaXB0LW1hdGVyaWFsLXVpLWNvbGxlY3Rpb25cXEV4YW1wbGVBbmRUZXN0XFxsaWJcXENvbXBvbmVudHNcXE1hdGVyaWFsT3V0bGluZWRCdXR0b25cXGluZGV4LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7VGV4dH0gZnJvbSBcInJlYWN0LW5hdGl2ZVwiO1xuaW1wb3J0IFJpcHBsZSBmcm9tICdyZWFjdC1uYXRpdmUtbWF0ZXJpYWwtcmlwcGxlJztcbmltcG9ydCBNYXRlcmlhbENvbW11bml0eUljb25zIGZyb20gJ3JlYWN0LW5hdGl2ZS12ZWN0b3ItaWNvbnMvTWF0ZXJpYWxDb21tdW5pdHlJY29ucydcbmltcG9ydCB7TWF0ZXJpYWxQcm9ncmVzc30gZnJvbSBcIi4uLy4uXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgTWF0ZXJpYWxPdXRsaW5lZEJ1dHRvblByb3BzIHtcbiAgdGV4dDogc3RyaW5nLFxuICBpY29uPzogUmVhY3QuUmVhY3ROb2RlLFxuICBtYXJnaW4/Om51bWJlcixcbiAgdGV4dENvbG9yPzogc3RyaW5nLFxuICB0ZXh0Rm9udD86IHN0cmluZyxcbiAgb25QcmVzcz8oKTp2b2lkLFxuICBpY29uTmFtZT86c3RyaW5nLFxuICBwcm9ncmVzcz86Ym9vbGVhbixcbiAgc3R5bGU/Om9iamVjdFxufVxuXG5leHBvcnQgZGVmYXVsdCAocHJvcHM6IE1hdGVyaWFsT3V0bGluZWRCdXR0b25Qcm9wcykgPT5cbiAgPFJpcHBsZVxuICAgIHJpcHBsZUNvbG9yPXtwcm9wcy50ZXh0Q29sb3J9XG4gICAgb25QcmVzcz17KCk9PnByb3BzLm9uUHJlc3MoKX1cbiAgICBzdHlsZT17e2JvcmRlclJhZGl1czogNCxcbiAgICAgIG1hcmdpbjpwcm9wcy5tYXJnaW4sXG4gICAgICBoZWlnaHQ6IDM2LFxuICAgICAgbWluV2lkdGg6IDY0LFxuICAgICAgYm9yZGVyV2lkdGg6MixcbiAgICAgIGJvcmRlckNvbG9yOnByb3BzLnRleHRDb2xvcixcbiAgICAgIG92ZXJmbG93OidoaWRkZW4nLFxuICAgICAgZmxleERpcmVjdGlvbjoncm93JyxcbiAgICAgIHBhZGRpbmdMZWZ0OjE2LFxuICAgICAgcGFkZGluZ1JpZ2h0OjE2LFxuICAgICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXG4gICAgICAuLi5wcm9wcy5zdHlsZVxuICAgIH19PlxuICAgIHtwcm9wcy5pY29uID8gcHJvcHMuaWNvbiA6XG4gICAgICAoIXByb3BzLnByb2dyZXNzICYmIHByb3BzLmljb25OYW1lKSAmJlxuICAgICAgPE1hdGVyaWFsQ29tbXVuaXR5SWNvbnNcbiAgICAgICAgc3R5bGU9e3ttYXJnaW46OH19IG5hbWU9e3Byb3BzLmljb25OYW1lfSBzaXplPXsxNH0gY29sb3I9IHtwcm9wcy50ZXh0Q29sb3J9XG4gICAgICAvPlxuICAgIH1cbiAgICB7cHJvcHMucHJvZ3Jlc3MgJiZcbiAgICA8TWF0ZXJpYWxQcm9ncmVzcyBjb2xvcj17cHJvcHMudGV4dENvbG9yfSBzbWFsbC8+XG4gICAgfVxuICAgIHshcHJvcHMucHJvZ3Jlc3MgJiZcbiAgICA8VGV4dCBzdHlsZT17e2ZvbnRGYW1pbHk6IHByb3BzLnRleHRGb250LCBjb2xvcjogcHJvcHMudGV4dENvbG9yLCBmb250U2l6ZTogMTR9fT57cHJvcHMudGV4dH08L1RleHQ+XG4gICAgfVxuICA8L1JpcHBsZT47XG4iXSwidmVyc2lvbiI6M30=